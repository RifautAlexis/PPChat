// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PPChat.Repository;

namespace PPChat.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190915141012_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PPChat.Models.Message", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("SenderId");

                    b.Property<string>("ThreadId");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.HasIndex("ThreadId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("PPChat.Models.SpeakersThreads", b =>
                {
                    b.Property<string>("SpeakerId");

                    b.Property<string>("ThreadId");

                    b.HasKey("SpeakerId", "ThreadId");

                    b.HasIndex("ThreadId");

                    b.ToTable("SpeakersThreads");
                });

            modelBuilder.Entity("PPChat.Models.Thread", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Threads");
                });

            modelBuilder.Entity("PPChat.Models.User", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("Email");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PPChat.Models.Message", b =>
                {
                    b.HasOne("PPChat.Models.User", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId");

                    b.HasOne("PPChat.Models.Thread", "Thread")
                        .WithMany("Messages")
                        .HasForeignKey("ThreadId");
                });

            modelBuilder.Entity("PPChat.Models.SpeakersThreads", b =>
                {
                    b.HasOne("PPChat.Models.User", "Speaker")
                        .WithMany("Threads")
                        .HasForeignKey("SpeakerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PPChat.Models.Thread", "Thread")
                        .WithMany("Speakers")
                        .HasForeignKey("ThreadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PPChat.Models.User", b =>
                {
                    b.HasOne("PPChat.Models.User", "LinkedToContact")
                        .WithMany("Contacts")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
